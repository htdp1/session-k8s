apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: session-dev
  name: redis-envoy-002
  labels:
    app: redis-envoy-002
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: redis-envoy-002
  template:
    metadata:
      labels:
        app: redis-envoy-002
        component: redis-envoy
    spec:
      #hostNetwork: true
      containers:
      - name: redis-envoy-002
        image: redis:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 6379
        command: 
          - redis-server
          - "/redis-master/redis.conf"
        env:
          - name: REDIS_PASSWORD
            value: Password12#$
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 300m
            memory: 256Mi
        volumeMounts:
        #- name: persistent-storage
        #  mountPath: /data
        - name: shared-storage
          mountPath: /data
        - name: redis-config
          mountPath: /redis-master
      - name: envoy
        image: envoyproxy/envoy-dev:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 6380
            name: envoy
          - containerPort: 8001
            name: admin
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: redis-envoy-nfs
      - name: redis-config
        configMap:
          name: redis-config
          items:
          - key: redis.conf
            path: redis.conf
      - name: envoy-config
        configMap:
          name: envoy-config-002
          items:
          - key: envoy.yaml
            path: envoy.yaml
